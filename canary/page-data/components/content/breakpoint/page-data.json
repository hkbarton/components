{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/content/breakpoint/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"9d12039f-8577-5e45-bf79-3f0043c80e5f","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Breakpoint\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Breakpoint\"), \" component is used to render content at desired screen sizes.\"), mdx(\"p\", null, \"While we recommend using css breakpoints or styled-system when possible, this component is provided to facilitate larger markup or behavior changes tailored to the device.\"), mdx(\"p\", null, \"We support five named breakpoints as follows:\"), mdx(NamedBreakpointTable, {\n    mdxType: \"NamedBreakpointTable\"\n  }), mdx(\"h2\", null, \"Rendering content on a range of devices\"), mdx(\"p\", null, \"Use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"show\"), \" prop to specify either a string name of a single device (e.g. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"'mobile'\"), \"), or a 2-length tuple to define a range of devices (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"['mobile', 'desktop']\"), \" \", \"\\u2013\", \" \\\"render from mobile to desktop\\\").\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Paragraph mb=\\\"small\\\">Resize window to watch content change:</Paragraph>\\n<Breakpoint show={['mobile', 'laptop']}>\\n  <Box bg=\\\"criticalAccent\\\" p=\\\"large\\\">\\n    Render on Mobile, Tablet, and Laptop (0-1024px)\\n  </Box>\\n</Breakpoint>\\n<Breakpoint show={['desktop', 'xl']}>\\n  <Box bg=\\\"keyAccent\\\" p=\\\"large\\\">\\n    Desktop and xl screens (1025px and larger)\\n  </Box>\\n</Breakpoint>\\n<Breakpoint show=\\\"desktop\\\">\\n  <Box bg=\\\"positiveAccent\\\" p=\\\"large\\\" mt=\\\"small\\\">\\n    Show on desktop only (1025-1200px)\\n  </Box>\\n</Breakpoint>\\n<Breakpoint show=\\\"xl\\\">\\n  <Box bg=\\\"informAccent\\\" p=\\\"large\\\" mt=\\\"small\\\">\\n    Show on XL only (>1200px)\\n  </Box>\\n</Breakpoint>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":null,"status":null,"storybook":true,"storybookPath":null,"title":"Breakpoint"}}},"pageContext":{"id":"9d12039f-8577-5e45-bf79-3f0043c80e5f"}},"staticQueryHashes":["1992130076","2337259409","4275213719","4275213719"]}